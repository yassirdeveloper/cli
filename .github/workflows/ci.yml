name: CI

on:
  push:
    branches: [ main ]

env:
  GO_VERSION: 1.24

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  patch_release:
    runs-on: ubuntu-latest
    needs: build
    if: contains(github.event.head_commit.message, '[PATCH_RELEASE]')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "Latest tag: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV

      - name: Calculate Next Patch Version
        id: calculate_next_version
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ env.latest_tag }}"
          NEXT_PATCH=$((PATCH + 1))
          NEW_TAG="${MAJOR}.${MINOR}.${NEXT_PATCH}"
          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV

      - name: Create New Tag
        run: |
          git config --global "${{ secrets.GIT_USERNAME }}"
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}